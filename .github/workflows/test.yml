name: Tests

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

jobs:
  test-scenarios:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 2
      matrix:
        features:
          - biome
          - color
          - gpg-hack
          - hello
          - lazygit
          - neovim
          - pkgx
          - pre-commit-cache
          - pre-commit-load-common-hooks
          - pulumi
          - shell-history
          - uv
    steps:
      - uses: actions/checkout@v5

      - name: "Install latest devcontainer CLI"
        run: npm install -g @devcontainers/cli

      - name: "Generating tests for '${{ matrix.features }}' scenarios"
        run: devcontainer features test -f ${{ matrix.features }} --skip-autogenerated --skip-duplicated .

  test-global:
    runs-on: ubuntu-latest
    needs: test-scenarios
    steps:
      - uses: actions/checkout@v5

      - name: "Install latest devcontainer CLI"
        run: npm install -g @devcontainers/cli

      - name: "Testing global scenarios"
        run: devcontainer features test --global-scenarios-only .

  test-autogenerated:
    runs-on: ubuntu-latest
    needs: test-global
    strategy:
      max-parallel: 2
      matrix:
        features:
          - biome
          - color
          - gpg-hack
          - hello
          - lazygit
          - neovim
          - pkgx
          - pre-commit-cache
          - pre-commit-load-common-hooks
          - pulumi
          - shell-history
          - uv
        baseImage:
          - debian:latest
          - ubuntu:latest
          - mcr.microsoft.com/devcontainers/base:ubuntu
    steps:
      - uses: actions/checkout@v5

      - name: "Install latest devcontainer CLI"
        run: npm install -g @devcontainers/cli

      - name: "Generating tests for '${{ matrix.features }}' against '${{ matrix.baseImage }}'"
        run: devcontainer features test --skip-scenarios -f ${{ matrix.features }} -i ${{ matrix.baseImage }} .
