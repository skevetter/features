name: Tests

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write
  packages: write

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      features: ${{ steps.filter.outputs.changes }}
    steps:
      - uses: actions/checkout@v5

      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            amazon-q-cli:
              - './**/amazon-q-cli/**'
            biome:
              - './**/biome/**'
            catppuccin:
              - './**/catppuccin/**'
            color:
              - './**/color/**'
            curl:
              - './**/curl/**'
            fzf:
              - './**/fzf/**'
            gpg-hack:
              - './**/gpg-hack/**'
            hello:
              - './**/hello/**'
            lazygit:
              - './**/lazygit/**'
            neovim:
              - './**/neovim/**'
            picolayer:
              - './**/picolayer/**'
            pkgx:
              - './**/pkgx/**'
            pre-commit-cache:
              - './**/pre-commit-cache/**'
            prek:
              - './**/prek/**'
            pulumi:
              - './**/pulumi/**'
            shell-history:
              - './**/shell-history/**'
            shfmt:
              - './**/shfmt/**'
            uv:
              - './**/uv/**'

  test-scenarios:
    runs-on: ubuntu-latest
    needs: changes
    if: ${{ needs.changes.outputs.features != '[]' }}
    strategy:
      max-parallel: 3
      matrix:
        features: ${{ fromJSON(needs.changes.outputs.features) }}
    steps:
      - uses: actions/checkout@v5

      - name: "Install latest devcontainer CLI"
        run: npm install -g @devcontainers/cli

      - name: "Generating tests for '${{ matrix.features }}' scenarios"
        run: devcontainer features test -f ${{ matrix.features }} --skip-autogenerated --skip-duplicated .

  test-global:
    runs-on: ubuntu-latest
    needs: test-scenarios
    steps:
      - uses: actions/checkout@v5

      - name: "Install latest devcontainer CLI"
        run: npm install -g @devcontainers/cli

      - name: "Testing global scenarios"
        run: devcontainer features test --global-scenarios-only .

  test-autogenerated:
    runs-on: ubuntu-latest
    needs:
      - changes
      - test-global
    if: ${{ needs.changes.outputs.features != '[]' }}
    strategy:
      max-parallel: 3
      matrix:
        features: ${{ fromJSON(needs.changes.outputs.features) }}
        baseImage:
          - debian:latest
          - ubuntu:latest
          - mcr.microsoft.com/devcontainers/base:ubuntu
    steps:
      - uses: actions/checkout@v5

      - name: "Install latest devcontainer CLI"
        run: npm install -g @devcontainers/cli

      - name: "Generating tests for '${{ matrix.features }}' against '${{ matrix.baseImage }}'"
        run: devcontainer features test --skip-scenarios -f ${{ matrix.features }} -i ${{ matrix.baseImage }} .

  publish:
    runs-on: ubuntu-latest
    needs:
      - test-autogenerated
    steps:
      - uses: actions/checkout@v5

      - name: "Publish Features"
        uses: devcontainers/action@v1
        with:
          publish-features: "true"
          base-path-to-features: "./src"
          generate-docs: "true"

      - name: Create PR
        uses: peter-evans/create-pull-request@v7
        with:
          title: "chore: update generated documentation"
          commit-message: "chore: update generated documentation"
          add-paths: |
            **/README.md
